{
  "_args": [
    [
      {
        "raw": "eslint-config-esnext@~1.6.0",
        "scope": null,
        "escapedName": "eslint-config-esnext",
        "name": "eslint-config-esnext",
        "rawSpec": "~1.6.0",
        "spec": ">=1.6.0 <1.7.0",
        "type": "range"
      },
      "/Users/MacBookPro/Informatica/ucodes/ProyectoTics2/node_modules/eslint-config-node"
    ]
  ],
  "_from": "eslint-config-esnext@>=1.6.0 <1.7.0",
  "_id": "eslint-config-esnext@1.6.0",
  "_inCache": true,
  "_location": "/eslint-config-esnext",
  "_nodeVersion": "6.2.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/eslint-config-esnext-1.6.0.tgz_1472403977868_0.06699416995979846"
  },
  "_npmUser": {
    "name": "kunalgolani",
    "email": "kunalgolani@gmail.com"
  },
  "_npmVersion": "3.9.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eslint-config-esnext@~1.6.0",
    "scope": null,
    "escapedName": "eslint-config-esnext",
    "name": "eslint-config-esnext",
    "rawSpec": "~1.6.0",
    "spec": ">=1.6.0 <1.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eslint-config-node"
  ],
  "_resolved": "https://registry.npmjs.org/eslint-config-esnext/-/eslint-config-esnext-1.6.0.tgz",
  "_shasum": "62d3a5927ee6c3e7dbf9ae5ad2212e840a6bb95d",
  "_shrinkwrap": null,
  "_spec": "eslint-config-esnext@~1.6.0",
  "_where": "/Users/MacBookPro/Informatica/ucodes/ProyectoTics2/node_modules/eslint-config-node",
  "author": {
    "name": "kunalgolani@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/kunalgolani/eslint-config/issues"
  },
  "dependencies": {
    "babel-eslint": "~6.1.0",
    "eslint": "~3.4.0",
    "eslint-plugin-babel": "~3.3.0",
    "eslint-plugin-import": "~1.14.0"
  },
  "description": "Pluggable eslint config for ECMAScript Next that you can import, extend and override",
  "devDependencies": {
    "js-yaml": "~3.6.1"
  },
  "directories": {},
  "dist": {
    "shasum": "62d3a5927ee6c3e7dbf9ae5ad2212e840a6bb95d",
    "tarball": "https://registry.npmjs.org/eslint-config-esnext/-/eslint-config-esnext-1.6.0.tgz"
  },
  "homepage": "https://github.com/kunalgolani/eslint-config/esnext#readme",
  "keywords": [
    "eslint",
    "eslint-config",
    "eslintconfig",
    "esnext",
    "es6",
    "es7",
    "es2015",
    "es2016"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "kunalgolani",
      "email": "kunalgolani@gmail.com"
    }
  ],
  "name": "eslint-config-esnext",
  "optionalDependencies": {},
  "peerDependencies": {
    "babel-eslint": "~6.1.0",
    "eslint": "~3.4.0",
    "eslint-plugin-babel": "~3.3.0",
    "eslint-plugin-import": "~1.14.0"
  },
  "publishConfig": {
    "registry": "http://registry.npmjs.org/"
  },
  "readme": "## Pluggable [ESLint](http://eslint.org/docs/about/) [config](http://eslint.org/docs/developer-guide/shareable-configs) for [ECMAScript Next](kangax.github.io/compat-table/esnext) that you can import, extend and override\n\n[![Join the chat at https://gitter.im/kunalgolani/eslint-config ][gitter-img]][gitter-url]\n[![npm version][version-img]][npm-url]\n[![npm downloads][downloads-img]][npm-url]\n[![GitHub issues][issues-img]][issues-url]\n[![Deps][deps-img]][deps-url]\n[![Dev Deps][devDeps-img]][deps-url]\n\n\n### ESNext: Safety Checks and Best Practices with a bias toward code concision / brevity\n\n#### Usage\n\nIn your js project directory:\n\n```shell\nnpm install --save-dev eslint-config-esnext\n```\n\n<!--\nIf your environments node.js version is less than `5.0` or your npm version is lower than `3.0`, you may also need to install:\n\n```shell\nnpm install --save-dev babel-eslint eslint-plugin-babel\n```\n-->\n\nAnd in your `.eslintrc.yaml`:\n\n```yaml\n---\n  extends:\n    - esnext\n```\n\nAlternatively, in your `.eslintrc.js` or `.eslintrc.json`:\n\n```json\n{\n  \"extends\": [\"esnext\"]\n}\n```\n\nTo add a git-hook to your commits, consider using [husky](https://github.com/typicode/husky)\n\n```shell\nnpm install --save-dev husky\n```\n\nAnd in your `package.json`:\n\n```json\n  \"scripts\": {\n    \"precommit\": \"eslint .\"\n  }\n```\n\n---\n\n#### Config\n\nThis config is biased and opinionated, and errs on the side of too many rules instead of too few. Think of this as a superset of your repo's lint config, and discard what you don't like in it. It's easy to override and disable the rules you find inconvenient.\n\n```yaml\n  env:\n    es6: true\n    commonjs: true\n```\n\n[enables](http://eslint.org/docs/user-guide/configuring#specifying-environments) [ES6 features](https://github.com/lukehoban/es6features#readme) and [CommonJS modules](https://www.wikiwand.com/en/CommonJS)\n\n```yaml\n  parser: babel-eslint\n```\n\n[enables parsing](https://github.com/babel/babel-eslint) all [babel](https://babeljs.io/) [supported code](https://babeljs.io/docs/plugins/)\n\n```yaml\n  parserOptions:\n    ecmaVersion: 7\n    sourceType: module\n    ecmaFeatures:\n      impliedStrict: true\n      modules: true\n      experimentalObjectRestSpread: true\n```\n\nallows [es2015 modules](https://github.com/ModuleLoader/es6-module-loader/wiki/Brief-Overview-of-ES6-Module-syntax) and [es2016 object rest and spread](https://github.com/sebmarkbage/ecmascript-rest-spread) [to be parsed](http://eslint.org/docs/user-guide/configuring#specifying-parser-options), and applies [strict mode](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode) to all js code\n\n```yaml\n  extends:\n    - eslint:recommended\n    - plugin:import/errors\n    - plugin:import/warnings\n```\n\nincludes the following rules:\n\n- [`constructor-super`](http://eslint.org/docs/rules/constructor-super): require `super()` calls in constructors\n- [`no-case-declarations`](http://eslint.org/docs/rules/no-case-declarations): disallow `let`, `const`, `function` and `class` declarations in `case` / `default` clauses inside `switch` blocks\n- [`no-class-assign`](http://eslint.org/docs/rules/no-class-assign): disallow reassigning variables declared as classes\n- [`no-cond-assign`](http://eslint.org/docs/rules/no-cond-assign): disallow assignment operators in conditional expressions\n- [`no-console`](http://eslint.org/docs/rules/no-console): disallow the use of `console`\n- [`no-const-assign`](http://eslint.org/docs/rules/no-const-assign): disallow reassigning `const` variables\n- [`no-constant-condition`](http://eslint.org/docs/rules/no-constant-condition): disallow constant expressions in conditions\n- [`no-control-regex`](http://eslint.org/docs/rules/no-control-regex): disallow control characters in regular expressions\n- [`no-debugger`](http://eslint.org/docs/rules/no-debugger): disallow the use of `debugger`\n- [`no-delete-var`](http://eslint.org/docs/rules/no-delete-var): disallow deleting variables\n- [`no-dupe-args`](http://eslint.org/docs/rules/no-dupe-args): disallow duplicate arguments in `function` definitions\n- [`no-dupe-class-members`](http://eslint.org/docs/rules/no-dupe-class-members): disallow duplicate class members\n- [`no-dupe-keys`](http://eslint.org/docs/rules/no-dupe-keys): disallow duplicate keys in object literals\n- [`no-duplicate-case`](http://eslint.org/docs/rules/no-duplicate-case): disallow duplicate case labels\n- [`no-empty`](http://eslint.org/docs/rules/no-empty): disallow empty block statements\n- [`no-empty-character-class`](http://eslint.org/docs/rules/no-empty-character-class): disallow empty character classes in regular expressions\n- [`no-empty-pattern`](http://eslint.org/docs/rules/no-empty-pattern): disallow empty destructuring patterns\n- [`no-ex-assign`](http://eslint.org/docs/rules/no-ex-assign): disallow reassigning exceptions in `catch` clauses\n- [`no-extra-boolean-cast`](http://eslint.org/docs/rules/no-extra-boolean-cast): disallow unnecessary boolean casts\n- [`no-extra-semi`](http://eslint.org/docs/rules/no-extra-semi): disallow unnecessary semicolons\n- [`no-fallthrough`](http://eslint.org/docs/rules/no-fallthrough): disallow fallthrough of `case` statements\n- [`no-func-assign`](http://eslint.org/docs/rules/no-func-assign): disallow reassigning `function` declarations\n- [`no-inner-declarations`](http://eslint.org/docs/rules/no-inner-declarations): disallow `function` or `var` declarations in nested blocks\n- [`no-invalid-regexp`](http://eslint.org/docs/rules/no-invalid-regexp): disallow invalid regular expression strings in `RegExp` constructors\n- [`no-irregular-whitespace`](http://eslint.org/docs/rules/no-irregular-whitespace): disallow irregular whitespace outside of strings and comments\n- [`no-mixed-spaces-and-tabs`](http://eslint.org/docs/rules/no-mixed-spaces-and-tabs): disallow mixed spaces and tabs for indentation\n- [`no-new-symbol`](http://eslint.org/docs/rules/no-new-symbol): disallow `new` operators with the `Symbol` object\n- [`no-obj-calls`](http://eslint.org/docs/rules/no-obj-calls): disallow calling global object properties as functions\n- [`no-octal`](http://eslint.org/docs/rules/no-octal): disallow octal literals\n- [`no-redeclare`](http://eslint.org/docs/rules/no-redeclare): disallow `var` redeclaration\n- [`no-regex-spaces`](http://eslint.org/docs/rules/no-regex-spaces): disallow multiple spaces in regular expression literals\n- [`no-self-assign`](http://eslint.org/docs/rules/no-self-assign): disallow assignments where both sides are exactly the same\n- [`no-sparse-arrays`](http://eslint.org/docs/rules/no-sparse-arrays): disallow sparse arrays\n- [`no-this-before-super`](http://eslint.org/docs/rules/no-this-before-super): disallow `this`/`super` before calling `super()` in constructors\n- [`no-undef`](http://eslint.org/docs/rules/no-undef): disallow the use of undeclared variables unless mentioned in `/-global -/` comments\n- [`no-unexpected-multiline`](http://eslint.org/docs/rules/no-unexpected-multiline): disallow multiline expressions likely to cause [ASI](http://inimino.org/~inimino/blog/javascript_semicolons) errors\n- [`no-unreachable`](http://eslint.org/docs/rules/no-unreachable): disallow unreachable code after `return`, `throw`, `continue`, and `break` statements\n- [`no-unsafe-finally`](http://eslint.org/docs/rules/no-unsafe-finally): disallow control flow statements in `finally` blocks\n- [`no-unused-labels`](http://eslint.org/docs/rules/no-unused-labels): disallow unused [labels](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/label)\n- [`no-unused-vars`](http://eslint.org/docs/rules/no-unused-vars): disallow unused variables\n- [`require-yield`](http://eslint.org/docs/rules/require-yield): require generator functions to contain `yield`\n- [`use-isnan`](http://eslint.org/docs/rules/use-isnan): disallow comparisons with `NaN`, requiring calls to `isNaN()` instead\n- [`valid-typeof`](http://eslint.org/docs/rules/valid-typeof): enforce comparing `typeof` expressions against valid type strings\n\n- [`import/no-unresolved`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-unresolved.md): ensure imports point to a file/module that can be resolved\n- [`import/named`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/named.md): ensure named imports correspond to a named export in the remote file\n- [`import/namespace`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/namespace.md): ensure imported namespaces contain dereferenced properties as they are dereferenced\n- [`import/default`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/default.md): ensure a default export is present, given a default import\n- [`import/export`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/expor.md): report any invalid exports, i.e. re-export of the same name\n\n- [`import/no-named-as-default`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-named-as-default.md): report use of exported name as identifier of default export; set to warn only\n- [`import/no-named-as-default-member`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-named-as-default-member.md): report use of exported name as property of default export; set to warn only\n\n```yaml\n  rules:\n```\n\nselected [from here](http://eslint.org/docs/rules/), configured to:\n\n- [`array-callback-return`](http://eslint.org/docs/rules/array-callback-return): enforce `return` statements in callbacks to array prototype methods such as `map`, `reduce`, `find` etc.\n- [`arrow-body-style`](http://eslint.org/docs/rules/arrow-body-style): require braces around arrow function bodies, `as-needed`\n- [`class-methods-use-this`](http://eslint.org/docs/rules/class-methods-use-this): disallow class methods that don't use `this`\n- [`dot-notation`](http://eslint.org/docs/rules/dot-notation): enforce dot notation for accessing object properties whenever possible\n- [`eqeqeq`](http://eslint.org/docs/rules/eqeqeq): prefer `===` and `!==` over `==` and `!=`\n- [`import/no-amd`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-amd.md): report AMD `require` and `define` calls\n- [`import/no-commonjs`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-commonjs.md): report CommonJS `require` calls and `module.exports` or `exports.*`\n- [`import/no-duplicates`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-duplicates.md): report repeated import of the same module in multiple places\n- [`import/no-extraneous-dependencies`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-extraneous-dependencies.md): forbid the use of extraneous packages\n- [`import/no-mutable-exports`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-mutable-exports.md): forbid the use of mutable exports with `var` or `let`\n- [`import/no-namespace`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-namespace.md): report namespace imports\n- [`import/no-nodejs-modules`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-nodejs-modules.md): disallow node.js builtin modules\n- [`import/prefer-default-export`](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/prefer-default-export.md): prefer a default export if module exports a single name\n- [`no-alert`](http://eslint.org/docs/rules/no-alert): disallow the use of `alert`, `confirm`, and `prompt`\n- [`no-constant-condition`](http://eslint.org/docs/rules/no-constant-condition): override `eslint:recommended` with `checkLoops: false` to avoid errors in infinite [generators](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/function*)\n- [`no-duplicate-imports`](http://eslint.org/docs/rules/no-duplicate-imports): disallow duplicate module imports\n- [`no-empty-function`](http://eslint.org/docs/rules/no-empty-function): disallow empty functions\n- [`no-else-return`](http://eslint.org/docs/rules/no-else-return): disallow `else` blocks after `return` statements in `if` blocks\n- [`no-eval`](http://eslint.org/docs/rules/no-eval): disallow the use of `eval()`\n- [`no-extend-native`](http://eslint.org/docs/rules/no-extend-native): disallow extending built-in or native objects\n- [`no-extra-bind`](http://eslint.org/docs/rules/no-extra-bind): disallow binding functions that don't use `this`\n- [`no-global-assign`](http://eslint.org/docs/rules/no-global-assign): disallow assignments to native objects or read-only global variables\n- [`no-implicit-globals`](http://eslint.org/docs/rules/no-implicit-globals): disallow `var` and named `function` declarations in the global scope, doesn't apply to modules\n- [`no-implied-eval`](http://eslint.org/docs/rules/no-implied-eval): disallow the use of eval()-like methods\n- [`no-invalid-this`](http://eslint.org/docs/rules/no-invalid-this): disallow `this` outside of constructors, classes or methods\n- [`no-lonely-if`](http://eslint.org/docs/rules/no-lonely-if): disallow `if` statements as the only statement in `else` blocks\n- [`no-loop-func`](http://eslint.org/docs/rules/no-loop-func): disallow `function`s inside loops\n- [`no-new`](http://eslint.org/docs/rules/no-new): disallow `new` operators outside of assignments or comparisons\n- [`no-new-func`](http://eslint.org/docs/rules/no-new-func): disallow creating functions with the `Function` constructor\n- [`no-new-wrappers`](http://eslint.org/docs/rules/no-new-wrappers): disallow creating objects with the `String`, `Number`, and `Boolean` constructors\n- [`no-proto`](http://eslint.org/docs/rules/no-proto): disallow use of the `__proto__` property\n- [`no-script-url`](http://eslint.org/docs/rules/no-script-url): disallow `javascript:` urls\n- [`no-self-compare`](http://eslint.org/docs/rules/no-self-compare): disallow comparisons where both sides are exactly the same\n- [`no-throw-literal`](http://eslint.org/docs/rules/no-throw-literal): disallow throwing literals as exceptions\n- [`no-unmodified-loop-condition`](http://eslint.org/docs/rules/no-unmodified-loop-condition): enforce updating the loop condition in each iteration\n- [`no-unneeded-ternary`](http://eslint.org/docs/rules/no-unneeded-ternary): disallow ternary operators when simpler alternatives exist; `defaultAssignment: false` prefers `||` for default assignments\n- [`no-unsafe-negation`](http://eslint.org/docs/rules/no-unsafe-negation): disallow negating the left operand of relational operators like `in` and `instanceof`\n- [`no-unused-expressions`](http://eslint.org/docs/rules/no-unused-expressions): disallow expressions that have no effect on the state of the program, with `allowShortCircuit: true` and `allowTernary: true` allowing `&&`, `||` and the ternary operator as shorthands for `if` and `else`\n- [`no-use-before-define`](http://eslint.org/docs/rules/no-use-before-define): disallow the use of variables before they are defined; `nofunc` ignores `function` declarations since they're hoisted\n- [`no-useless-call`](http://eslint.org/docs/rules/no-useless-call): disallow unnecessary `.call()` and `.apply()`\n- [`no-useless-computed-key`](http://eslint.org/docs/rules/no-useless-computed-key): disallow unnecessary computed property keys in object literals\n- [`no-useless-concat`](http://eslint.org/docs/rules/no-useless-concat): disallow unnecessary concatenation of literals or template literals\n- [`no-useless-constructor`](http://eslint.org/docs/rules/no-useless-constructor): disallow unnecessary constructors\n- [`no-useless-escape`](http://eslint.org/docs/rules/no-useless-escape): disallow unnecessary escape characters\n- [`no-useless-rename`](http://eslint.org/docs/rules/no-useless-rename): disallow renaming `import`, `export`, and destructured assignments to the same name\n- [`no-var`](http://eslint.org/docs/rules/no-var): require `let` or `const` instead of `var`\n- [`no-with`](http://eslint.org/docs/rules/no-with): disallow `with` statements\n- [`object-shorthand`](http://eslint.org/docs/rules/object-shorthand): require method and property shorthand syntax for object literals\n- [`operator-assignment`](http://eslint.org/docs/rules/operator-assignment): require assignment operator shorthand where possible\n- [`prefer-arrow-callback`](http://eslint.org/docs/rules/prefer-arrow-callback): require callbacks to be arrow functions\n- [`prefer-const`](http://eslint.org/docs/rules/prefer-const): require `const` declarations for variables that are never reassigned after declared\n- [`prefer-rest-params`](http://eslint.org/docs/rules/prefer-rest-params): require rest parameters instead of `arguments`\n- [`prefer-spread`](http://eslint.org/docs/rules/prefer-spread): require spread operator instead of `.apply()`\n\n---\n\n### [ESNext Style Guide](https://github.com/kunalgolani/eslint-config/tree/master/esnext/style-guide)\n\n\n[gitter-img]: https://badges.gitter.im/kunalgolani/eslint-config.svg\n[gitter-url]: https://gitter.im/kunalgolani/eslint-config?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[version-img]: https://img.shields.io/npm/v/eslint-config-esnext.svg\n[npm-url]: https://www.npmjs.com/package/eslint-config-esnext\n[downloads-img]: https://img.shields.io/npm/dt/eslint-config-esnext.svg\n[issues-img]: https://img.shields.io/github/issues-raw/kunalgolani/eslint-config.svg?maxAge=2592000\n[issues-url]: https://github.com/kunalgolani/eslint-config/issues\n[deps-img]: https://img.shields.io/david/kunalgolani/eslint-config.svg\n[devDeps-img]: https://img.shields.io/david/dev/kunalgolani/eslint-config.svg\n[deps-url]: https://github.com/kunalgolani/eslint-config/blob/master/esnext/package.json",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kunalgolani/eslint-config.git"
  },
  "scripts": {
    "prepublish": "js-yaml index.yaml > index.json && js-yaml style-guide/index.yaml > style-guide/index.json",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.6.0"
}
